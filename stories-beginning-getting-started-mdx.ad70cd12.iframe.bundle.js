"use strict";(self.webpackChunkngx_dynamic_json_form_common=self.webpackChunkngx_dynamic_json_form_common||[]).push([[942],{"./projects/lib-material/src/stories/beginning/getting-started.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>getting_started});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const getting_started=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,{})})):_createMdxContent();function _createMdxContent(){return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Beginning/Getting Started"}),"\n",(0,jsx_runtime.jsx)(dist.UG,{children:'# Quick Start\r\n\r\n- Demo: [here](https://digisolu.github.io/ngx-dynamic-json-form/?path=/docs/examples-and-guides-registration-form--documentation)\r\n- Docs: [here](https://digisolu.github.io/ngx-dynamic-json-form/)\r\n\r\n## Versions\r\n\r\n<table width="100%">\r\n  <thead>\r\n    <tr>\r\n      <th align="left">Angular</th>\r\n      <th align="left">Angular Material</th>\r\n      <th align="left">ngx-dynamic-json-form-core</th>\r\n      <th align="left">ngx-dynamic-json-form-material</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>< 15</td>\r\n      <td>< 15</td>\r\n      <td>not tested, if it is working, please report it via GitHub.</td>\r\n      <td>not tested, if it is working, please report it via GitHub.</td>\r\n    </tr>\r\n    <tr>\r\n      <td>15.x.x</td>\r\n      <td>15.x.x</td>\r\n      <td>1.x.x</td>\r\n      <td>1.x.x</td>\r\n    </tr>\r\n    <tr>\r\n      <td>16.x.x</td>\r\n      <td>16.x.x</td>\r\n      <td>1.x.x</td>\r\n      <td>1.x.x</td>\r\n    </tr>\r\n    <tr>\r\n      <td>17.x.x</td>\r\n      <td>17.x.x</td>\r\n      <td>not tested yet</td>\r\n      <td>not tested yet</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n## Install and Usage\r\n\r\nThis is a step by step instruction to install and use `ngx-dynamic-json-form`.\r\n\r\n### 1. Install all packages:\r\n\r\n```sh\r\nnpm i ngx-dynamic-json-form-core ngx-dynamic-json-form-material ngx-mat-select-search --save\r\n```\r\n\r\nPlease make sure, that `@angular/forms` and `"@angular/material` are installed too.\r\n\r\n### 2. Add `ngx-dynamic-json-form` to your `AppModule`\r\n\r\n```typescript\r\n\r\nimport { AppComponent } from \'./app.component\';\r\nimport { NgxDynamicJsonFormMaterialModule } from \'ngx-dynamic-json-form-material\';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule\r\n    NgxDynamicJsonFormMaterialModule.forRoot()\r\n  ],\r\n  ...\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\nThe `forRoot()` method call is required on root level.\r\n\r\nThis method is used to override default configurations and is needed to register custom components.\r\n\r\nMore information can be found in the [global configuration section](https://digisolu.github.io/ngx-dynamic-json-form/?path=/docs/examples-and-guides-global-configurations--documentation).\r\n\r\n### 3. Configure the form in the component TS\r\n\r\n```typescript\r\n@Component({\r\n  // ...\r\n  changeDetection: ChangeDetectionStrategy.OnPush, // <- Recommended\r\n})\r\nexport class MyComponent implements OnInit {\r\n  public form: FormGroup = new FormGroup({}); // <- The form instance\r\n\r\n  // The form fields\r\n  public fields: FormField[] = [\r\n    {\r\n      type: "select",\r\n      key: "language",\r\n      label: "Language",\r\n      options: [\r\n        { label: "Language 1", value: "1" },\r\n        // ...\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // The callback method to get the instance of the form\r\n  public setForm(form: FormGroup): void {\r\n    this.form = form;\r\n  }\r\n}\r\n```\r\n\r\n### 4. Use `ngx-dynamic-json-form` in the component HTML\r\n\r\n```html\r\n<ngx-dynamic-json-form\r\n  [fields]="fields"\r\n  (getForm)="setForm($event)"\r\n  [initial]="initialValues"\r\n  formClassName="my-form-class"\r\n></ngx-dynamic-json-form>\r\n```\r\n\r\n<table width="100%">\r\n  <thead>\r\n    <tr>\r\n      <th align="left">Input</th>\r\n      <th align="left">Description</th>\r\n      <th align="left">Required</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>`fields`</td>\r\n      <td>This is the configuration of all form fields.</td>\r\n      <td>Yes</td>\r\n    </tr>\r\n    <tr>\r\n      <td>`getForm`</td>\r\n      <td>A callback to get the instance of the `FormGroup`.</td>\r\n      <td>No</td>\r\n    </tr>\r\n    <tr>\r\n      <td>`initial`</td>\r\n      <td>An object with the initial values of the form.</td>\r\n      <td>No</td>\r\n    </tr>\r\n    <tr>\r\n      <td>`formClassName`</td>\r\n      <td>Add a class name to the form.</td>\r\n      <td>No</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n'})]})}}}}]);