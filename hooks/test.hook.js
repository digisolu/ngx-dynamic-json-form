var parse = require("lcov-parse");
var fs = require("fs");

var mode = process.argv.slice(2)[0];

var content = fs.readFileSync("./coverage/lib-" + mode + "/lcov.info", "utf8");

parse(content, function (error, data) {
  if (error) {
    console.error("./coverage/lib-" + mode + "/lcov.info", error);
    throw error;
  }
  var output = generateOutput(data);
  writeFile(output);
});

function generateOutput(dataArray) {
  var tableRows = "";
  var totalHits = 0;
  var totalFound = 0;
  dataArray.forEach(function (data) {
    var lineHits = data.lines.hit + data.functions.hit + data.branches.hit;
    var lineFound = data.lines.found + data.functions.found + data.branches.found;
    totalHits += lineHits;
    totalFound += lineFound;

    tableRows +=
      "<tr>" +
      "<td>" +
      data.file.replaceAll("\\", "/").replace("projects/lib" + mode + "/src/lib/", "") +
      "</td>" +
      "<td>" +
      toPercent(data.lines.found, data.lines.hit) +
      "</td>" +
      "<td>" +
      toPercent(data.functions.found, data.functions.hit) +
      "</td>" +
      "<td>" +
      toPercent(data.branches.found, data.branches.hit) +
      "</td>" +
      "<td>" +
      toPercent(lineFound, lineHits) +
      "</td>" +
      "</tr>\n";
  });

  var output =
    "## Documentation Coverage for: ngx-dynamic-json-form-" +
    mode +
    ": " +
    toPercent(totalFound, totalHits) +
    "\n\n";

  output += "This Report is autogenerated and shows the Documentation coverage for the lib.\n\n";
  output += "### Included files:\n\n";
  output +=
    '<div class="scroll-container"><table width="100%"><thead><tr><th align="left">File</th><th align="left">Lines</th><th align="left">Functions</th><th align="left">Branches</th><th align="left">Coverage File</th></tr></thead><tbody>';
  output += tableRows;
  output += "</tbody></table></div>";

  return output;
}

function toPercent(found, hit) {
  return found === 0 ? "100%" : Math.round((hit / found) * 100) + "%";
}

function writeFile(output) {
  try {
    require("fs").writeFileSync(
      "./projects/lib-" + mode + "/COVERAGE-CODE.md",
      output,
      "utf-8",
      "w+"
    );
    console.log("\x1b[32m%s\x1b[0m", "info", "=> coverage file for " + mode + " was generated");
  } catch (error) {
    console.log("Error: Cannot write file");
    throw error;
  }
}
